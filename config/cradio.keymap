// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include "danish_keyboard.dtsi"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define ___ &trans
#define xxx &none
#define BASE 0
#define NAVIGATION 1
#define NAVIGATION_SECOND 2
#define SYMBOL 3
#define MOUSE 4
#define WTILE 5
#define TRI 6
#define GAMER 7
#define GAMER_RIGHT 8
#define GAMER_NUMBER 9
#define GAMER_ALPHA 10
#define MEDIA 11
#define NUMBER 12
#define ALT_TEXT 13

// Home row mods macro
/*                KEY POSITIONS

  ╭────────────────────╮ ╭────────────────────╮
  │  0   1   2   3   4 │ │  5   6   7   8   9 │
  │ 10  11  12  13  14 │ │ 15  16  17  18  19 │
  │ 20  21  22  23  24 │ │ 25  26  27  28  29 │
  ╰───────────╮ 30  31 │ │ 32  33 ╭───────────╯
              ╰────────╯ ╰────────╯            */

&caps_word { continue-list = <_UNDERSCORE _MINUS BSPC>; };

/ {
    macros {
        lm: lm {
            label = "LAYER_MOD";
            compatible = "zmk,behavior-macro-two-param";
            wait-ms = <0>;
            tap-ms = <0>;
            #binding-cells = <2>;
            bindings =
                <&macro_press>,
                <&mo 1>,
                <&macro_press>,
                <&kp SEMI>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&kp SEMI>,
                <&macro_release>,
                <&mo 1>;
        };

        wtquit: wtquit {
            label = "WTILE_QUIT";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LMETA>,
                <&macro_press>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp Q>,
                <&macro_release>,
                <&kp LSHFT>,
                <&macro_release>,
                <&kp LMETA>;
        };

        wtadd: wtadd {
            label = "WTILE_ADD";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LMETA>,
                <&macro_tap>,
                <&kp W>,
                <&macro_release>,
                <&kp LMETA>;
        };

        wtremove: wtremove {
            label = "WTILE_REMOVE";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LMETA>,
                <&macro_press>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp W>,
                <&macro_release>,
                <&kp LSHFT>,
                <&macro_release>,
                <&kp LMETA>;
        };

        wcw: wcw {
            label = "WTILE_CHANGE_WORKSPACE";
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_press>,
                <&kp LMETA &macro_param_1to1>,
                <&macro_tap>,
                <&kp MACRO_PLACEHOLDER>,
                <&macro_release>,
                <&kp LMETA>;
        };

        wccw: wccw {
            label = "WTILE_CHANGE_WORKSPACE_INDEX";
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_press>,
                <&kp LMETA>,
                <&macro_press>,
                <&kp LSHFT &macro_param_1to1>,
                <&macro_tap>,
                <&kp MACRO_PLACEHOLDER>,
                <&macro_release>,
                <&kp LSHFT>,
                <&macro_release>,
                <&kp LMETA>;
        };

        wcwin: wcwin {
            label = "WTILE_CHANGE_WINDOW";
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_press>,
                <&kp LALT &macro_param_1to1>,
                <&macro_tap>,
                <&kp MACRO_PLACEHOLDER>,
                <&macro_release>,
                <&kp LALT>;
        };

        wccwin: wccwin {
            label = "WTILE_CHANGE_WINDOW_INDEX";
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_press>,
                <&kp LSHFT &macro_param_1to1>,
                <&macro_tap>,
                <&kp MACRO_PLACEHOLDER>,
                <&macro_release>,
                <&kp LSHFT>,
                <&macro_release>,
                <&kp LALT>;
        };

        ae: ae {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&none>,
                <&macro_press>,
                <&kp LEFT_GUI>,
                <&macro_tap>,
                <&kp SEMI>,
                <&macro_release>,
                <&kp LEFT_GUI>;

            label = "AE";
        };

        ten_tap: ten_tap {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_tap>,
                <&macro_param_1to1 &kp MACRO_PLACEHOLDER>,
                <&macro_tap>,
                <&macro_tap>;

            label = "TEN_TAP";
        };
    };

    behaviors {
        ht: hold_tap {
            label = "hold_tap";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };

        htw: hold_tab_wtile {
            label = "hold_tap_wtile";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <1>;
            global-quick-tap;
            retro-tap;
            bindings = <&lm>, <&sl>;
        };

        htwcw: htwcw {
            label = "hold_tap_change_workspace";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            global-quick-tap;
            bindings = <&wccw>, <&wcw>;
        };

        htwcwin: htwcwin {
            label = "hold_tap_change_window";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            global-quick-tap;
            bindings = <&wccwin>, <&wcwin>;
        };

        tabsymtap: tabsymtap {
            label = "tab_sym_tap";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <1>;
            global-quick-tap;
            retro-tap;
            bindings = <&mo>, <&kp>;
        };

        kp_sl: kp_sl {
            label = "kp_sl";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <150>;
            global-quick-tap;
            bindings = <&kp>, <&sl>;
        };

        sctd: SHIFT_CAPS_WORD_TAP_DANCE {
            compatible = "zmk,behavior-tap-dance";
            label = "SHIFT_CAPS_WORD_TAP_DANCE";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <&sk LSHIFT>, <&caps_word>;
        };

        togkp: HT_TAP_TOGGLE_LAYER {
            label = "HT_TAP_TOGGLE_LAYER";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            global-quick-tap;
            bindings = <&tog>, <&kp>;
        };

        lt_hold_pref: lt_hold_pref {
            compatible = "zmk,behavior-hold-tap";
            label = "LT_HOLD_PREF";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
        };

        ten_up: ten_up {
            compatible = "zmk,behavior-mod-morph";
            label = "TEN_UP";
            bindings = <&kp UP_ARROW>, <&ten_tap UP_ARROW>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        ten_down: ten_down {
            compatible = "zmk,behavior-mod-morph";
            label = "TEN_DOWN";
            bindings = <&kp DOWN_ARROW>, <&ten_tap DOWN_ARROW>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        ten_left: ten_left {
            compatible = "zmk,behavior-mod-morph";
            label = "TEN_LEFT";
            bindings = <&kp LEFT>, <&ten_tap LEFT_ARROW>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        ten_right: ten_right {
            compatible = "zmk,behavior-mod-morph";
            label = "TEN_RIGHT";
            bindings = <&kp RIGHT>, <&ten_tap RIGHT>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };

    combos {
        compatible = "zmk,combos";

        bootloader {
            bindings = <&bootloader>;
            key-positions = <23 22 21 20>;
            layers = <0>;
        };

        toggle_gamer {
            bindings = <&tog 6>;
            key-positions = <16 17 18 19>;
            layers = <0 6>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // HALMAK 

        default {
            bindings = <
&lt 8 W           &kp L           &kp R        &kp B           &kp Z                  &kp Q              &kp U           &kp D        &kp G           &lt 9 J
&ht LEFT_SHIFT S  &ht LEFT_ALT H  &ht LCTRL N  &ht LEFT_GUI T  &kp DOT                &lt 3 COMMA        &ht LEFT_GUI A  &ht LCTRL E  &ht LEFT_ALT O  &ht LSHFT I
&kp F             &kp M           &kp V        &kp C           &sctd                  &ht LS(FSLH) FSLH  &kp P           &kp X        &kp K           &kp Y
                                               &lt 5 SPACE     &lt_hold_pref 4 TAB    &kp BSPC           &htw 0 2
            >;
        };

        mouse {
            bindings = <
&none      &none  &kp W  &none      &none       &none  &none  &none  &none  &none
&kp LSHFT  &kp A  &kp S  &kp D      &none       &none  &kp J  &kp K  &none  &none
&kp LCTRL  &none  &none  &none      &none       &none  &none  &none  &none  &none
                         &kp SPACE  &kp LALT    &none  &none
            >;
        };

        wtile {
            bindings = <
&wtquit       &wtadd        &none         &none         &none           &none      &htwcwin N9 N9  &none           &wtremove       &kp PAUSE_BREAK
&htwcw N1 N1  &htwcw N2 N2  &htwcw N3 N3  &htwcw N4 N4  &htwcw N5 N5    &none      &htwcwin N1 N1  &htwcwin N2 N2  &htwcwin N3 N3  &htwcwin N4 N4
&htwcw N6 N6  &htwcw N7 N7  &htwcw N8 N8  &htwcw N9 N9  &none           &none      &htwcwin N5 N5  &htwcwin N6 N6  &htwcwin N7 N7  &htwcwin N8 N8
                                          &wcw Q        &wcwin Q        &kp LSHFT  &kp LMETA
            >;
        };

        number {
            bindings = <
&none      &none      &none      &kp F11    &kp F12       &kp F11    &kp F12    &none      &none      &none
&ht F1 N1  &ht F2 N2  &ht F3 N3  &ht F4 N4  &ht F5 N5     &ht F1 N1  &ht F2 N2  &ht F3 N3  &ht F4 N4  &ht F5 N5
&ht F6 N6  &ht F7 N7  &ht F8 N8  &ht F9 N9  &ht F10 N0    &ht F6 N6  &ht F7 N7  &ht F8 N8  &ht F9 N9  &ht F10 N0
                                 &kp SPACE  &none         &kp BSPC   &none
            >;
        };

        symbol {
            bindings = <
&none       &none                  &ht RA(NUMBER_2) RA(NUMBER_4)  &ht EXCL RPAR      &ht LS(NUBS) NUBS    &none     &ht RA(N9) RA(N8)      &ht RA(EQUAL) CARET  &none  &none
&kp LS(N5)  &ht PIPE LS(NUMBER_3)  &ht FSLH MINUS                 &ht LS(N9) LS(N8)  &ht RA(NUBS) AMPS    &none     &ht BSLH LS(NUMBER_2)  &ht RA(N0) RA(N7)    &none  &none
&none       &none                  &none                          &none              &none                &none     &kp LBKT               &kp APOS             &ae    &none
                                                                  &none              &none                &kp BSPC  &none
            >;
        };

        navigation {
            bindings = <
&none   &none     &kp PG_UP  &none    &none    &none    &none      &none      &none       &none
&trans  &kp HOME  &kp LCTRL  &kp END  &none    &none    &ten_left  &ten_up    &ten_right  &none
&none   &none     &kp PG_DN  &none    &none    &none    &none      &ten_down  &none       &none
                             &none    &none    &kp ESC  &kp ENTER
            >;
        };

        gamer {
            bindings = <
&ht TAB ESCAPE  &kp Q  &kp W  &kp E      &kp R            &kp N1    &kp N2    &kp N3  &kp N4     &kp N5
&kp LSHFT       &kp A  &kp S  &kp D      &kp F            &kp N6    &kp N7    &kp N8  &kp N9     &kp N0
&kp LCTRL       &kp Z  &kp X  &kp C      &kp V            &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &none
                              &kp SPACE  &kp_sl LALT 7    &none     &none
            >;
        };

        gamer_right {
            bindings = <
&kp T     &kp Y     &kp U     &kp I     &kp O       &none  &none  &none  &none  &none
&ht N1 G  &ht N2 H  &ht N3 J  &ht N4 K  &ht N5 L    &none  &none  &none  &none  &none
&ht N6 B  &ht N7 N  &ht N8 M  &ht N9 P  &kp N0      &none  &none  &none  &none  &none
                              &none     &none       &none  &none
            >;
        };

        media {
            bindings = <
&none  &none  &none  &none              &none           &none  &none           &none       &none             &none
&none  &none  &none  &kp C_VOLUME_DOWN  &kp C_VOL_UP    &none  &kp C_PREVIOUS  &kp C_NEXT  &kp C_PLAY_PAUSE  &none
&none  &none  &none  &none              &none           &none  &kp C_MUTE      &none       &none             &none
                     &none              &none           &none  &none
            >;
        };

        bluetooth {
            bindings = <
&trans      &trans        &trans        &trans        &trans    &trans  &trans  &trans  &trans  &trans
&trans      &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &trans    &trans  &trans  &trans  &trans  &trans
&bt BT_CLR  &trans        &trans        &none         &trans    &trans  &trans  &trans  &trans  &trans
                                        &trans        &trans    &trans  &trans
            >;
        };
    };
};
